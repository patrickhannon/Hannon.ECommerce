@using ECommerce.Components
@model ECommerce.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
     <div class="col-xs-12 col-md-6 center-block">
         <div class="panel panel-primary">
             <div class="panel-heading">
                 <h3 class="panel-title">Register</h3>
             </div>
             <div class="panel-body">
                 @Html.ValidationSummary()
                 <div class="form-group">
                     @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                     <div class="col-md-10">
                         @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                     </div>
                 </div>
                 <div class="form-group">
                     @Html.LabelFor(m => m.CellPhone, new { @class = "col-md-2 control-label" })
                     <div class="col-md-10">
                         @Html.TextBoxFor(m => m.CellPhone, new { @class = "form-control" })
                     </div>
                 </div>
                 <div class="form-group">
                     @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                     <div class="col-md-10">
                         @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                     </div>
                 </div>
                 <div class="form-group">
                     @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                     <div class="col-md-10">
                         @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                     </div>
                 </div>
                 <div class="form-group">
                     @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                     <div class="col-md-10">
                         @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                     </div>
                 </div>
                 <div class="form-group">
                     @Html.CheckBoxBootstrapFor(m => m.IsActive,
                         "IsActive", "Is Active?")
                 </div>
                 <div class="form-group">
                     @Html.CheckBoxBootstrapFor(m => m.USCustomer,
                         "USCustomer", "USCustomer?")
                 </div>
                 <div class="panel-footer">
                     @Html.SubmitButton("Submit")
                     @Html.SubmitButton("Reset", "resetButton",
                         false, "btn-success",
                         new { data_test="ATestAttribute" })
                     @Html.SubmitButton("Cancel", "cancelButton",
                         true, "btn-default")
                 </div>
             </div>
         </div>
     </div>
</div>
}
<div class="row">
    <div class="col-xs-12 col-md-6 center-block">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">Customer Active or US based (Inline)</h3>
            </div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.CheckBoxBootstrapFor(m => m.IsActive,
                        "IsActive", "Is Active?", true, false, true)
                    @Html.CheckBoxBootstrapFor(m => m.IsActive,
                        "IsIn401k", "IsActive?", false, false, true)
                    @Html.CheckBoxBootstrapFor(m => m.USCustomer,
                        "IsInHealthCare", "Us Based?", true, false, true)
                </div>
            </div>
            <div class="panel-footer">
                @Html.SubmitButton("Submit")
                @Html.SubmitButton("Cancel", "cancelButton", true, "btn-default")
            </div>
        </div>
    </div>
</div>



@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script>
            $(document).ready(function () {
                // NOTE: Must use input type='text' and not 'email'
                //       in order for masking to work
                //$("#Email").inputmask("email");
                //$("#StartDate").inputmask("date");
                $("#CellPhone").inputmask("mask", { "mask": "(999) 999-9999", 'removeMaskOnSubmit': true });
                // NOTE: Must use autoUnmask to allow numerics to
                //       post back to MVC model
                //       Must use input type='text' and not 'number' in
                //       order for masking to work
                //$("#Salary").inputmask("currency", { 'removeMaskOnSubmit': true });
            });
        </script>
    }
